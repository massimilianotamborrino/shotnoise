// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// OU_IG_V_generator2
double OU_IG_V_generator2(double w);
RcppExport SEXP _shotnoise_OU_IG_V_generator2(SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(OU_IG_V_generator2(w));
    return rcpp_result_gen;
END_RCPP
}
// function_IG_generator
NumericVector function_IG_generator(int n, double mu, double lambda);
RcppExport SEXP _shotnoise_function_IG_generator(SEXP nSEXP, SEXP muSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(function_IG_generator(n, mu, lambda));
    return rcpp_result_gen;
END_RCPP
}
// OU_IG_Rcpp_
NumericVector OU_IG_Rcpp_(double T_terminal, int N_time, int N_path, double X_0, double alpha, double mu, double sigma2);
RcppExport SEXP _shotnoise_OU_IG_Rcpp_(SEXP T_terminalSEXP, SEXP N_timeSEXP, SEXP N_pathSEXP, SEXP X_0SEXP, SEXP alphaSEXP, SEXP muSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type T_terminal(T_terminalSEXP);
    Rcpp::traits::input_parameter< int >::type N_time(N_timeSEXP);
    Rcpp::traits::input_parameter< int >::type N_path(N_pathSEXP);
    Rcpp::traits::input_parameter< double >::type X_0(X_0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(OU_IG_Rcpp_(T_terminal, N_time, N_path, X_0, alpha, mu, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// OU_IG_trajectory_Rcpp_
NumericVector OU_IG_trajectory_Rcpp_(double T_terminal, int N_time, double X_0, double alpha, double mu, double sigma2);
RcppExport SEXP _shotnoise_OU_IG_trajectory_Rcpp_(SEXP T_terminalSEXP, SEXP N_timeSEXP, SEXP X_0SEXP, SEXP alphaSEXP, SEXP muSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type T_terminal(T_terminalSEXP);
    Rcpp::traits::input_parameter< int >::type N_time(N_timeSEXP);
    Rcpp::traits::input_parameter< double >::type X_0(X_0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(OU_IG_trajectory_Rcpp_(T_terminal, N_time, X_0, alpha, mu, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// stl_sortb
NumericVector stl_sortb(NumericVector x);
RcppExport SEXP _shotnoise_stl_sortb(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(stl_sortb(x));
    return rcpp_result_gen;
END_RCPP
}
// OU_Poisson_Rcpp_
NumericVector OU_Poisson_Rcpp_(double t0, int Nsim, double x0, double alpha, double mu);
RcppExport SEXP _shotnoise_OU_Poisson_Rcpp_(SEXP t0SEXP, SEXP NsimSEXP, SEXP x0SEXP, SEXP alphaSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< int >::type Nsim(NsimSEXP);
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    rcpp_result_gen = Rcpp::wrap(OU_Poisson_Rcpp_(t0, Nsim, x0, alpha, mu));
    return rcpp_result_gen;
END_RCPP
}
// OU_Gamma_Rcpp_
NumericVector OU_Gamma_Rcpp_(double T_terminal, int N_time, int N_path, double Y_0, double delta, double mu, double sigma2, int scenario);
RcppExport SEXP _shotnoise_OU_Gamma_Rcpp_(SEXP T_terminalSEXP, SEXP N_timeSEXP, SEXP N_pathSEXP, SEXP Y_0SEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP sigma2SEXP, SEXP scenarioSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type T_terminal(T_terminalSEXP);
    Rcpp::traits::input_parameter< int >::type N_time(N_timeSEXP);
    Rcpp::traits::input_parameter< int >::type N_path(N_pathSEXP);
    Rcpp::traits::input_parameter< double >::type Y_0(Y_0SEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< int >::type scenario(scenarioSEXP);
    rcpp_result_gen = Rcpp::wrap(OU_Gamma_Rcpp_(T_terminal, N_time, N_path, Y_0, delta, mu, sigma2, scenario));
    return rcpp_result_gen;
END_RCPP
}
// OU_Gamma_trajectory_Rcpp_
NumericVector OU_Gamma_trajectory_Rcpp_(double T_terminal, int N_time, double Y_0, double delta, double mu, double sigma2, int scenario);
RcppExport SEXP _shotnoise_OU_Gamma_trajectory_Rcpp_(SEXP T_terminalSEXP, SEXP N_timeSEXP, SEXP Y_0SEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP sigma2SEXP, SEXP scenarioSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type T_terminal(T_terminalSEXP);
    Rcpp::traits::input_parameter< int >::type N_time(N_timeSEXP);
    Rcpp::traits::input_parameter< double >::type Y_0(Y_0SEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< int >::type scenario(scenarioSEXP);
    rcpp_result_gen = Rcpp::wrap(OU_Gamma_trajectory_Rcpp_(T_terminal, N_time, Y_0, delta, mu, sigma2, scenario));
    return rcpp_result_gen;
END_RCPP
}
// stl_sort
NumericVector stl_sort(NumericVector x);
RcppExport SEXP _shotnoise_stl_sort(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(stl_sort(x));
    return rcpp_result_gen;
END_RCPP
}
// cumsum_sug
NumericVector cumsum_sug(NumericVector x);
RcppExport SEXP _shotnoise_cumsum_sug(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(cumsum_sug(x));
    return rcpp_result_gen;
END_RCPP
}
// shotnoise_JnP_Rcpp_
NumericVector shotnoise_JnP_Rcpp_(double t0, int Nsim, double x0, double alpha, double mu, double lambda);
RcppExport SEXP _shotnoise_shotnoise_JnP_Rcpp_(SEXP t0SEXP, SEXP NsimSEXP, SEXP x0SEXP, SEXP alphaSEXP, SEXP muSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< int >::type Nsim(NsimSEXP);
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(shotnoise_JnP_Rcpp_(t0, Nsim, x0, alpha, mu, lambda));
    return rcpp_result_gen;
END_RCPP
}
// shotnoise_JnBer_Rcpp_
NumericVector shotnoise_JnBer_Rcpp_(double t0, int Nsim, double x0, double alpha, double mu, double lambda);
RcppExport SEXP _shotnoise_shotnoise_JnBer_Rcpp_(SEXP t0SEXP, SEXP NsimSEXP, SEXP x0SEXP, SEXP alphaSEXP, SEXP muSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< int >::type Nsim(NsimSEXP);
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(shotnoise_JnBer_Rcpp_(t0, Nsim, x0, alpha, mu, lambda));
    return rcpp_result_gen;
END_RCPP
}
// shotnoise_JnG_Rcpp_
NumericVector shotnoise_JnG_Rcpp_(double t0, int Nsim, double x0, double alpha, double mu, double sigma2, double lambda);
RcppExport SEXP _shotnoise_shotnoise_JnG_Rcpp_(SEXP t0SEXP, SEXP NsimSEXP, SEXP x0SEXP, SEXP alphaSEXP, SEXP muSEXP, SEXP sigma2SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< int >::type Nsim(NsimSEXP);
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(shotnoise_JnG_Rcpp_(t0, Nsim, x0, alpha, mu, sigma2, lambda));
    return rcpp_result_gen;
END_RCPP
}
// shotnoise_JnG_trajectory_Rcpp_
NumericVector shotnoise_JnG_trajectory_Rcpp_(double t0, int N_time, double x0, double alpha, double mu, double sigma2, double lambda);
RcppExport SEXP _shotnoise_shotnoise_JnG_trajectory_Rcpp_(SEXP t0SEXP, SEXP N_timeSEXP, SEXP x0SEXP, SEXP alphaSEXP, SEXP muSEXP, SEXP sigma2SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< int >::type N_time(N_timeSEXP);
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(shotnoise_JnG_trajectory_Rcpp_(t0, N_time, x0, alpha, mu, sigma2, lambda));
    return rcpp_result_gen;
END_RCPP
}
// shotnoise_JnChiSq_Rcpp_
NumericVector shotnoise_JnChiSq_Rcpp_(double t0, int Nsim, double x0, double alpha, double mu, double lambda);
RcppExport SEXP _shotnoise_shotnoise_JnChiSq_Rcpp_(SEXP t0SEXP, SEXP NsimSEXP, SEXP x0SEXP, SEXP alphaSEXP, SEXP muSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< int >::type Nsim(NsimSEXP);
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(shotnoise_JnChiSq_Rcpp_(t0, Nsim, x0, alpha, mu, lambda));
    return rcpp_result_gen;
END_RCPP
}
// shotnoise_JnIG_Rcpp_
NumericVector shotnoise_JnIG_Rcpp_(double t0, int Nsim, double x0, double alpha, double mu, double sigma2, double lambda);
RcppExport SEXP _shotnoise_shotnoise_JnIG_Rcpp_(SEXP t0SEXP, SEXP NsimSEXP, SEXP x0SEXP, SEXP alphaSEXP, SEXP muSEXP, SEXP sigma2SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< int >::type Nsim(NsimSEXP);
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(shotnoise_JnIG_Rcpp_(t0, Nsim, x0, alpha, mu, sigma2, lambda));
    return rcpp_result_gen;
END_RCPP
}
// shotnoise_JnIG_trajectory_Rcpp_
NumericVector shotnoise_JnIG_trajectory_Rcpp_(double t0, double N_time, double x0, double alpha, double mu, double sigma2, double lambda);
RcppExport SEXP _shotnoise_shotnoise_JnIG_trajectory_Rcpp_(SEXP t0SEXP, SEXP N_timeSEXP, SEXP x0SEXP, SEXP alphaSEXP, SEXP muSEXP, SEXP sigma2SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< double >::type N_time(N_timeSEXP);
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(shotnoise_JnIG_trajectory_Rcpp_(t0, N_time, x0, alpha, mu, sigma2, lambda));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_shotnoise_OU_IG_V_generator2", (DL_FUNC) &_shotnoise_OU_IG_V_generator2, 1},
    {"_shotnoise_function_IG_generator", (DL_FUNC) &_shotnoise_function_IG_generator, 3},
    {"_shotnoise_OU_IG_Rcpp_", (DL_FUNC) &_shotnoise_OU_IG_Rcpp_, 7},
    {"_shotnoise_OU_IG_trajectory_Rcpp_", (DL_FUNC) &_shotnoise_OU_IG_trajectory_Rcpp_, 6},
    {"_shotnoise_stl_sortb", (DL_FUNC) &_shotnoise_stl_sortb, 1},
    {"_shotnoise_OU_Poisson_Rcpp_", (DL_FUNC) &_shotnoise_OU_Poisson_Rcpp_, 5},
    {"_shotnoise_OU_Gamma_Rcpp_", (DL_FUNC) &_shotnoise_OU_Gamma_Rcpp_, 8},
    {"_shotnoise_OU_Gamma_trajectory_Rcpp_", (DL_FUNC) &_shotnoise_OU_Gamma_trajectory_Rcpp_, 7},
    {"_shotnoise_stl_sort", (DL_FUNC) &_shotnoise_stl_sort, 1},
    {"_shotnoise_cumsum_sug", (DL_FUNC) &_shotnoise_cumsum_sug, 1},
    {"_shotnoise_shotnoise_JnP_Rcpp_", (DL_FUNC) &_shotnoise_shotnoise_JnP_Rcpp_, 6},
    {"_shotnoise_shotnoise_JnBer_Rcpp_", (DL_FUNC) &_shotnoise_shotnoise_JnBer_Rcpp_, 6},
    {"_shotnoise_shotnoise_JnG_Rcpp_", (DL_FUNC) &_shotnoise_shotnoise_JnG_Rcpp_, 7},
    {"_shotnoise_shotnoise_JnG_trajectory_Rcpp_", (DL_FUNC) &_shotnoise_shotnoise_JnG_trajectory_Rcpp_, 7},
    {"_shotnoise_shotnoise_JnChiSq_Rcpp_", (DL_FUNC) &_shotnoise_shotnoise_JnChiSq_Rcpp_, 6},
    {"_shotnoise_shotnoise_JnIG_Rcpp_", (DL_FUNC) &_shotnoise_shotnoise_JnIG_Rcpp_, 7},
    {"_shotnoise_shotnoise_JnIG_trajectory_Rcpp_", (DL_FUNC) &_shotnoise_shotnoise_JnIG_trajectory_Rcpp_, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_shotnoise(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
